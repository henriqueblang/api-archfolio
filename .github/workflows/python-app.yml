# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Continuous Integration

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ master ]

defaults:
  run:
    working-directory: ./api

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      POSTGRE_HOST: localhost
      POSTGRE_USER: postgres
      POSTGRE_PORT: 5432
      POSTGRE_PASSWORD: postgres
      POSTGRE_DATABASE: postgres

    steps:
    - uses: actions/checkout@v2

    - uses: docker/setup-buildx-action@v1

    - uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build database Dockerfile
      run: docker build -t archfolio-test:latest -f db.Dockerfile .

    - name: Run database container
      run: docker run -d -e POSTGRES_USER=${{ env.POSTGRE_USER }} -e POSTGRES_PASSWORD=${{ env.POSTGRE_PASSWORD }} -p ${{ env.POSTGRE_PORT }}:${{ env.POSTGRE_PORT }} archfolio-test:latest

    - name: Build application Dockerfile
      uses: docker/build-push-action@v2
      with:
        context: api
        builder: ${{ steps.buildx.outputs.name }}
        load: true
        tags: build_api-archfolio:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Run tests
      run: |
        docker run --network=host -v $GITHUB_WORKSPACE/test-results:/app/test-results -e DNE_HOST=${{ secrets.DNE_HOST }} \
        -e DNE_USER=${{ secrets.DNE_USER }} \
        -e DNE_PASSWORD=${{ secrets.DNE_PASSWORD }} \
        -e DNE_DATABASE=${{ secrets.DNE_DATABASE }} \
        -e CACHE_HOST=${{ env.POSTGRE_HOST }} \
        -e CACHE_USER=${{ env.POSTGRE_USER }} \
        -e CACHE_PORT=${{ env.POSTGRE_PORT }} \
        -e CACHE_PASSWORD=${{ env.POSTGRE_PASSWORD }} \
        -e CACHE_DATABASE=${{ env.POSTGRE_DATABASE }} \
        -e AUTH0_SECRET_KEY=${{ secrets.AUTH0_SECRET_KEY }} \
        -e AUTH0_ALGORITHM=${{ secrets.AUTH0_ALGORITHM }} \
        -e AUTH0_VALID_ISS=${{ secrets.AUTH0_VALID_ISS }} \
        -e TEST_API_TOKEN=${{ secrets.TEST_API_TOKEN }} \
        build_api-archfolio:latest pytest --junitxml="test-reports.xml"
